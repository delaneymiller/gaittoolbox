%% Run experiment to all TCD data
% To display the mean of results per label
% row = startsWith(results.name, 'tcd-s4') | startsWith(results.name, 'tcd-s5')
% fresults = results(row, :)
% varfun(@mean, results, 'InputVariables', @isnumeric, 'GroupingVariables', 'label')
% writetable(rTable, '
dataList = { ...
    struct('subj', 's1', 'act', 'Acting1'), ...
    struct('subj', 's1', 'act', 'Acting2'), ...
    struct('subj', 's1', 'act', 'Acting3'), ...
    struct('subj', 's1', 'act', 'freestyle1'), ...
    struct('subj', 's1', 'act', 'freestyle2'), ...
    struct('subj', 's1', 'act', 'freestyle3'), ...
    struct('subj', 's1', 'act', 'rom1'), ...
    struct('subj', 's1', 'act', 'rom2'), ...
    struct('subj', 's1', 'act', 'rom3'), ...
    struct('subj', 's1', 'act', 'walking1'), ...
    struct('subj', 's1', 'act', 'walking2'), ...
    struct('subj', 's1', 'act', 'walking3'), ...
    struct('subj', 's2', 'act', 'acting1'), ...
    struct('subj', 's2', 'act', 'acting2'), ...
    struct('subj', 's2', 'act', 'acting3'), ...
    struct('subj', 's2', 'act', 'freestyle1'), ...
    struct('subj', 's2', 'act', 'freestyle2'), ...
    struct('subj', 's2', 'act', 'freestyle3'), ...
    struct('subj', 's2', 'act', 'rom1'), ...
    struct('subj', 's2', 'act', 'rom2'), ...
    struct('subj', 's2', 'act', 'rom3'), ...
    struct('subj', 's2', 'act', 'walking1'), ...
    struct('subj', 's2', 'act', 'walking2'), ...
    struct('subj', 's2', 'act', 'walking3'), ...
    struct('subj', 's3', 'act', 'acting1'), ...
    struct('subj', 's3', 'act', 'acting2'), ...
    struct('subj', 's3', 'act', 'acting3'), ...
    struct('subj', 's3', 'act', 'freestyle1'), ...
    struct('subj', 's3', 'act', 'freestyle2'), ...
    struct('subj', 's3', 'act', 'freestyle3'), ...
    struct('subj', 's3', 'act', 'rom1'), ...
    struct('subj', 's3', 'act', 'rom2'), ...
    struct('subj', 's3', 'act', 'rom3'), ...
    struct('subj', 's3', 'act', 'walking1'), ...
    struct('subj', 's3', 'act', 'walking2'), ...
    struct('subj', 's3', 'act', 'walking3'), ...
    struct('subj', 's4', 'act', 'acting3'), ...
    struct('subj', 's4', 'act', 'freestyle1'), ...
    struct('subj', 's4', 'act', 'freestyle3'), ...
    struct('subj', 's4', 'act', 'rom3'), ...
    struct('subj', 's4', 'act', 'walking2'), ...
    struct('subj', 's5', 'act', 'acting3'), ...
    struct('subj', 's5', 'act', 'freestyle1'), ...
    struct('subj', 's5', 'act', 'freestyle3'), ...
    struct('subj', 's5', 'act', 'rom3'), ...
    struct('subj', 's5', 'act', 'walking2'), ...
};
% dataList = {
%     struct('subj', 's5', 'act', 'walking2'), ...
% };
dir = 'totalcapture';
expDir = "./exp";

% setups = { ... % base scenarios 
%     struct('accData', 'v', 'oriData', 'v'), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 0, 'hjc', 0), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 0), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 0, 'hjc', 1), ...
%     ... % different data sets
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 1), ...
%     struct('accData', 'v', 'oriData', 'x', 'zupt', 1, 'hjc', 1), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 1), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 1), ...
%     struct('accData', 'xf', 'oriData', 'v', 'zupt', 1, 'hjc', 1), ...
%     struct('accData', 'xf', 'oriData', 'x', 'zupt', 1, 'hjc', 1), ...
%     ... % different hjc
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 2), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 2), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 3), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 3), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 4), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 4), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 9), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 9), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 11), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 11), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 11), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 12), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 12), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 12), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 13), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 13), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 13), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 14), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 14), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 14), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 15), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 15), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 15), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 16), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 16), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 16), ...
%     ... % different acc_bias
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 1, ...
%            'accbias', 1, 'P', eye(27, 27)*100), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 1, ...
%            'accbias', 1, 'P', eye(27, 27)*100), ...      
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 1, ...
%            'accbias', 2, 'P', eye(27, 27)*100), ... 
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 1, ...
%            'accbias', 2, 'P', eye(27, 27)*100), ...
%     ... % hjc v2 (no knee lock)
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 0, 'hjc', 101), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 101), ...
%     struct('accData', 'v', 'oriData', 'x', 'zupt', 1, 'hjc', 101), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 101), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 101), ...
%     struct('accData', 'xf', 'oriData', 'v', 'zupt', 1, 'hjc', 101), ...
%     struct('accData', 'xf', 'oriData', 'x', 'zupt', 1, 'hjc', 101), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 102), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 102), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 103), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 103), ...
%     ... % hjc v2 (no knee lock) + smoothly constrained kf
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 121), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 121), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 121), ...
%     ... % hjc v2 + fmincon
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 141), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 141), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 141), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 142), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 142), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 142), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 143), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 143), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 143), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 144), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 144), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 144), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 145), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 145), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 145), ...
%     struct('accData', 'v', 'oriData', 'v', 'zupt', 1, 'hjc', 146), ...
%     struct('accData', 'x', 'oriData', 'v', 'zupt', 1, 'hjc', 146), ...
%     struct('accData', 'x', 'oriData', 'x', 'zupt', 1, 'hjc', 146), ...
%     ... % EKVv3
%     struct('accData', 'v', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 1), ...
%     struct('accData', 'x', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 1), ...
%     struct('accData', 'x', 'oriData', 'x', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 1), ...
%     struct('accData', 'v', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 102), ...
%     struct('accData', 'x', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 102), ...
%     struct('accData', 'x', 'oriData', 'x', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 102), ...
%     struct('accData', 'v', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 105), ...
%     struct('accData', 'x', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 105), ...
%     struct('accData', 'x', 'oriData', 'x', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 105), ...
%     struct('accData', 'v', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 101), ...
%     struct('accData', 'x', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 101), ...
%     struct('accData', 'x', 'oriData', 'x', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 101), ...
%     struct('accData', 'v', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 104), ...
%     struct('accData', 'x', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 104), ...
%     struct('accData', 'x', 'oriData', 'x', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 104), ...
%     struct('accData', 'v', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 103), ...
%     struct('accData', 'x', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 103), ...
%     struct('accData', 'x', 'oriData', 'x', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 103), ...
%     struct('accData', 'v', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 106), ...
%     struct('accData', 'x', 'oriData', 'v', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 106), ...
%     struct('accData', 'x', 'oriData', 'x', 'est', 'ekfv3', ...
%            'zupt', 1, 'cstr', 106), ...
%     };

% setups = {
%     struct('label', 'Dxxx', 'est', 'ekfv3', ...
%            'accData', 'x', 'oriData', 'x', 'zuptData', 'x', ...
%            'zupt', 0, 'cstr', 0, 'P', 0.5), ...
%     struct('label', 'Dxxx+UWB', 'est', 'ekfv3', ...
%            'accData', 'x', 'oriData', 'x', 'zuptData', 'x', ...
%            'zupt', 0, 'cstr', 0, 'uwb', 1, 'P', 0.5), ...
% };
setups = {
    struct('label', 'Dvvv+UWB', 'est', 'ekfv3', ...
           'accData', 'v', 'oriData', 'v', 'zuptData', 'v', ...
           'zupt', 0, 'cstr', 0, 'uwb', 1, 'P', 0.5), ...
};
for zI = [0 4]
%     for cI = [0:7 21:23]
    for cI = [0 3 22]
        setups{end+1} = struct('label', sprintf('Dvvv+ZUPT%02d+C%03d', zI, cI), ...
               'est', 'ekfv3', ...
               'accData', 'v', 'oriData', 'v', 'zuptData', 'v', ...
               'zupt', zI, 'cstr', cI, 'P', 0.5);
%         setups{end+1} = struct('label', sprintf('Dxxx+ZUPT%02d+C%03d', zI, cI), ...
%                'est', 'ekfv3', ...
%                'accData', 'x', 'oriData', 'x', 'zuptData', 'x', ...
%                'zupt', zI, 'cstr', cI, 'P', 0.5);
    end
end
% for cI=[1:5 11:12 14:15 21:22 31:32 34:35 101:102 104:105]
%     setups{end+1} = struct('label', sprintf('Dxxx+ZUPT+C%03d', cI), ...
%            'est', 'ekfv3', ...
%            'accData', 'x', 'oriData', 'x', 'zuptData', 'x', ...
%            'zupt', 1, 'cstr', cI, 'P', 0.5);
% end
           
dataN = length(dataList);
dataInstances = {};
results = table();

for i = 1:dataN
% for i = 1:3
    n = dataList{i};
    name = sprintf('%s-%s-%s', 'tcd', n.subj, lower(n.act));
    dataPath = sprintf('%s/mat/%s.mat', dir, name);
    if exist(dataPath, 'file')
        load(dataPath, 'data');
    else
        data = struct('name', name, ...
            'fnameV', sprintf('%s/vicon/%s/%s_BlenderZXY_YmZ.bvh', dir, n.subj, lower(n.act)), ...
            'fnameS', sprintf('%s/gyroMag/%s/%s_Xsens_AuxFields.sensors', dir, n.subj, n.act), ...
            'fnameCIB', sprintf('%s/imu/%s/%s_%s_calib_imu_bone.txt', dir, n.subj, n.subj, lower(n.act)), ...
            'fnameCIR', sprintf('%s/imu/%s/%s_%s_calib_imu_ref.txt', dir, n.subj, n.subj, lower(n.act)) ...
            );
        data.dataV = mocapdb.BVHBody.loadBVHFile(data.fnameV, 'mm');
        data.dataV = mocapdb.BVHBody.loadBVHFile(data.fnameV, 'mm');
        data.dataS = mocapdb.XsensBody.loadSensorFile(data.fnameS);
        data.calibIB = mocapdb.XsensBody.loadCalib(data.fnameCIB);
        data.calibIR = mocapdb.XsensBody.loadCalib(data.fnameCIR);
        save(dataPath, 'data');
    end
    display(sprintf("Data %3d/%3d: %s", i, dataN, data.name));
    r = runTCDExperiment_oldv01(data.dataV, data.dataS, data.calibIB, data.calibIR, ...
                                data.name, setups, expDir);
    results = [results; struct2table(r)];
%     dataInstances{i} = tmp;
end

% update new results
dataPath = sprintf("%s/results.mat", expDir);
if exist(dataPath, 'file')
    newResults = results;
    load(dataPath);
    [C, ia, ib] = intersect(results(:,{'name', 'label'}), newResults(:,{'name', 'label'}));
    results(ia,:) = [];
    results = [results; newResults];
end
save(sprintf("%s/results.mat", expDir), 'results')